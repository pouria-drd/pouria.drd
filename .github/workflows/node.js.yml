name: Pouria.drd Website CI

on:
    push:
        branches: ["main"]

jobs:
    build:
        runs-on: self-hosted

        steps:
            - name: Checkout Repository
              uses: actions/checkout@v4

            - name: Set up Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: 22.x

            - name: Install Dependencies
              run: npm ci # Faster and deterministic install

            - name: Build the Project
              run: npm run build

            - name: Create .env File
              run: |
                  echo "EMAIL_PORT=${{ secrets.EMAIL_PORT }}" >> .env
                  echo "EMAIL_USE_TLS=${{ secrets.EMAIL_USE_TLS }}" >> .env
                  echo "EMAIL_SERVICE=${{ secrets.EMAIL_SERVICE }}" >> .env
                  echo "EMAIL_HOST=${{ secrets.EMAIL_HOST }}" >> .env
                  echo "EMAIL_HOST_USER=${{ secrets.EMAIL_HOST_USER }}" >> .env
                  echo "EMAIL_HOST_PASSWORD=${{ secrets.EMAIL_HOST_PASSWORD }}" >> .env
                  echo "DEFAULT_ADMINS_EMAILS=${{ secrets.DEFAULT_ADMINS_EMAILS }}" >> .env

            - name: Restart Application using PM2
              run: |
                  cd /home/pouria/actions-runner/_work/pouria.drd/pouria.drd
                  pm2 restart pouria.drd

# name: Pouria.drd Website CI

# on:
#     push:
#         branches: ["main"]

# jobs:
#     # Job to checkout repository and set up environment
#     setup:
#         runs-on: self-hosted
#         strategy:
#             matrix:
#                 node-version: [22.x]

#         steps:
#             - name: Checkout Repository
#               uses: actions/checkout@v4

#             - name: Set up Node.js ${{ matrix.node-version }}
#               uses: actions/setup-node@v4
#               with:
#                   node-version: ${{ matrix.node-version }}
#                   cache: "npm"

#     # Job to cache dependencies and Next.js build
#     cache:
#         runs-on: self-hosted
#         needs: setup
#         steps:
#             - name: Cache Node Modules
#               uses: actions/cache@v4
#               with:
#                   path: node_modules
#                   key: node-modules-${{ runner.os }}-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}
#                   restore-keys: |
#                       node-modules-${{ runner.os }}-

#             - name: Cache Next.js Build Cache
#               uses: actions/cache@v4
#               with:
#                   path: .next/cache
#                   key: nextjs-build-cache-${{ runner.os }}-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
#                   restore-keys: |
#                       nextjs-build-cache-${{ runner.os }}-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-

#     # Job to install dependencies and build the project
#     build:
#         runs-on: self-hosted
#         needs: cache
#         steps:
#             - name: Install Dependencies
#               run: npm ci # Faster and deterministic install

#             - name: Build the Project
#               run: npm run build

#     # Job to create the .env file with secrets
#     create-env:
#         runs-on: self-hosted
#         needs: build
#         steps:
#             - name: Create .env File
#               run: |
#                   echo "EMAIL_PORT=${{ secrets.EMAIL_PORT }}" >> .env
#                   echo "EMAIL_USE_TLS=${{ secrets.EMAIL_USE_TLS }}" >> .env
#                   echo "EMAIL_SERVICE=${{ secrets.EMAIL_SERVICE }}" >> .env
#                   echo "EMAIL_HOST=${{ secrets.EMAIL_HOST }}" >> .env
#                   echo "EMAIL_HOST_USER=${{ secrets.EMAIL_HOST_USER }}" >> .env
#                   echo "EMAIL_HOST_PASSWORD=${{ secrets.EMAIL_HOST_PASSWORD }}" >> .env
#                   echo "DEFAULT_ADMINS_EMAILS=${{ secrets.DEFAULT_ADMINS_EMAILS }}" >> .env

#     # Job to upload build artifacts
#     upload-artifacts:
#         runs-on: self-hosted
#         needs: create-env
#         steps:
#             - name: Upload Build Artifacts
#               uses: actions/upload-artifact@v4
#               with:
#                   name: build-output
#                   path: |
#                       .next
#                       package.json
#                       node_modules
#                       .env

#     # Job to restart the application using PM2
#     restart:
#         runs-on: self-hosted
#         needs: upload-artifacts
#         steps:
#             - name: Restart Application using PM2
#               run: |
#                   cd /home/pouria/actions-runner/_work/pouria.drd/pouria.drd
#                   pm2 restart pouria.drd
